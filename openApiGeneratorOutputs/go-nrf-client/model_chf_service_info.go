/*
NRF NFManagement Service

NRF NFManagement Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.0.alpha-1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ChfServiceInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChfServiceInfo{}

// ChfServiceInfo struct for ChfServiceInfo
type ChfServiceInfo struct {
	PrimaryChfServiceInstance *string `json:"primaryChfServiceInstance,omitempty"`
	SecondaryChfServiceInstance *string `json:"secondaryChfServiceInstance,omitempty"`
}

// NewChfServiceInfo instantiates a new ChfServiceInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChfServiceInfo() *ChfServiceInfo {
	this := ChfServiceInfo{}
	return &this
}

// NewChfServiceInfoWithDefaults instantiates a new ChfServiceInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChfServiceInfoWithDefaults() *ChfServiceInfo {
	this := ChfServiceInfo{}
	return &this
}

// GetPrimaryChfServiceInstance returns the PrimaryChfServiceInstance field value if set, zero value otherwise.
func (o *ChfServiceInfo) GetPrimaryChfServiceInstance() string {
	if o == nil || IsNil(o.PrimaryChfServiceInstance) {
		var ret string
		return ret
	}
	return *o.PrimaryChfServiceInstance
}

// GetPrimaryChfServiceInstanceOk returns a tuple with the PrimaryChfServiceInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChfServiceInfo) GetPrimaryChfServiceInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryChfServiceInstance) {
		return nil, false
	}
	return o.PrimaryChfServiceInstance, true
}

// HasPrimaryChfServiceInstance returns a boolean if a field has been set.
func (o *ChfServiceInfo) HasPrimaryChfServiceInstance() bool {
	if o != nil && !IsNil(o.PrimaryChfServiceInstance) {
		return true
	}

	return false
}

// SetPrimaryChfServiceInstance gets a reference to the given string and assigns it to the PrimaryChfServiceInstance field.
func (o *ChfServiceInfo) SetPrimaryChfServiceInstance(v string) {
	o.PrimaryChfServiceInstance = &v
}

// GetSecondaryChfServiceInstance returns the SecondaryChfServiceInstance field value if set, zero value otherwise.
func (o *ChfServiceInfo) GetSecondaryChfServiceInstance() string {
	if o == nil || IsNil(o.SecondaryChfServiceInstance) {
		var ret string
		return ret
	}
	return *o.SecondaryChfServiceInstance
}

// GetSecondaryChfServiceInstanceOk returns a tuple with the SecondaryChfServiceInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChfServiceInfo) GetSecondaryChfServiceInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.SecondaryChfServiceInstance) {
		return nil, false
	}
	return o.SecondaryChfServiceInstance, true
}

// HasSecondaryChfServiceInstance returns a boolean if a field has been set.
func (o *ChfServiceInfo) HasSecondaryChfServiceInstance() bool {
	if o != nil && !IsNil(o.SecondaryChfServiceInstance) {
		return true
	}

	return false
}

// SetSecondaryChfServiceInstance gets a reference to the given string and assigns it to the SecondaryChfServiceInstance field.
func (o *ChfServiceInfo) SetSecondaryChfServiceInstance(v string) {
	o.SecondaryChfServiceInstance = &v
}

func (o ChfServiceInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChfServiceInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryChfServiceInstance) {
		toSerialize["primaryChfServiceInstance"] = o.PrimaryChfServiceInstance
	}
	if !IsNil(o.SecondaryChfServiceInstance) {
		toSerialize["secondaryChfServiceInstance"] = o.SecondaryChfServiceInstance
	}
	return toSerialize, nil
}

type NullableChfServiceInfo struct {
	value *ChfServiceInfo
	isSet bool
}

func (v NullableChfServiceInfo) Get() *ChfServiceInfo {
	return v.value
}

func (v *NullableChfServiceInfo) Set(val *ChfServiceInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableChfServiceInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableChfServiceInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChfServiceInfo(val *ChfServiceInfo) *NullableChfServiceInfo {
	return &NullableChfServiceInfo{value: val, isSet: true}
}

func (v NullableChfServiceInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChfServiceInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


